// Proposer:
// round
// index -> (vote value, vote round)
// next unovted index


// leader
// active leader
// round number
//   - is fast
//   - is slow
// client id table?
//
// stuff known to be committed
// phase 1b responses
//
// for every index:
//














syntax = "proto2";

package frankenpaxos.fastmultipaxos;

import "scalapb/scalapb.proto";

option (scalapb.options) = {
  package_name: "frankenpaxos.fastmultipaxos"
  flat_package: true
};

message ProposeRequest {
  required string v = 1;
}
/*  */
/* message ProposeReply { */
/*   required string chosen = 1; */
/* } */

message Phase1a {
  required int32 leader_id = 1;
  required int32 round = 2;
  required int32 chosenWatermark = 3;
}

message Vote {
  required int32 slot = 1;
  required int32 voteRound = 2;
  required string voteValue = 3;
}

message Phase1b {
  required int32 acceptor_id = 1;
  required int32 round = 2;
  repeated Vote vote = 3;
}


message Phase2a {
  required int32 slot = 1;
  required int32 round = 2;
  optional string value = 3;
}

message Phase2b {
  required int32 acceptor_id = 1;
  required int32 slot = 2;
  required int32 round = 3;
  required string command = 4;
}

message ClientInbound {
  /* oneof request { */
  /*   ProposeReply propose_reply = 1; */
  /*   Phase2b phase2b = 2; */
  /* } */
}

message LeaderInbound {
  /* oneof request { */
  /*   ProposeRequest propose_request = 1; */
  /*   Phase1b phase1b = 2; */
  /*   Phase2b phase2b = 3; */
  /* } */
}

message AcceptorInbound {
  oneof request {
    ProposeRequest propose_request = 1;
    Phase1a phase1a = 2;
    Phase2a phase2a = 3;
  }
}
